load (9, 3); //loading the timer interrupt routine
load (10, 4);

load(11,5); // loading int=1 handler
load(12,6);

load(7,1);	//loading exception handler
load(8,2);

load(23,17); // loading the interrupt handler
load(24,18);

breakpoint;

[READY_LIST + 0] = 0; //PID = 0

breakpoint;

load(25,21);  //loading init program in blocks 25,26,27
load(26,22);
load(27,23);

breakpoint;

PTBR = 1024;//	setting the base address of the pre-process page table of init process
PTLR = 4;

breakpoint;

[PTBR + 0] = 25;    //preparing the page table
[PTBR + 1] = "01";


[PTBR + 2] = 26; 
[PTBR + 3] = "01";


[PTBR + 4] = 27; 
[PTBR + 5] = "01";


[PTBR + 6] = 28; 
[PTBR + 7] = "01";

breakpoint;

[READY_LIST + 1 ] = 2;	//state of the process is running

breakpoint;

SP = 3*512;  //stack top is set to the logical address of the starting of the third logical page

breakpoint;


[28 * 512] = 0;  //top of the stack is set to zero

breakpoint;

//process two's pcd and other things

[READY_LIST + 32 ] = 1;  //PID of the second process is 1

load(29,25 );  //loading the 25th block of memory which has executable code of the second process to 29th  memory block

alias PTBR_Process1 S0;
PTBR_Process1 = 1024 + 1 * 8;    // page table base address of the second process (PID = 1)

[PTBR_Process1 + 0] = 29; // Physical Page Number for Logical Page 0
[PTBR_Process1 + 1] = "01"; // Not referenced and Valid
[PTBR_Process1 + 2] = -1; // Invalid Page Number for Logical Page 1
[PTBR_Process1 + 3] = "00"; // Not referenced and Not Valid
[PTBR_Process1 + 4] = -1; // Invalid Page Number for Logical Page 1
[PTBR_Process1 + 5] = "00"; // Not referenced and Not Valid
[PTBR_Process1 + 6] = 30; // Physical Page Number for Logical Page 3
[PTBR_Process1 + 7] = "01"; // Not referenced and Valid

[READY_LIST + 33] = 1; // second process state is set to ready

[READY_LIST + 37] = PTBR_Process1; // PTBR value should be stored in pcd so pcd of the second process is from 32 to 63 in block 3 ;
[READY_LIST + 38] = 4; // PTLR 

[READY_LIST + 34] = 3 * 512; // Sets the entry for BP in the PCB
[READY_LIST + 35] = 3 * 512; // Sets the entry for SP in the PCB 

[READY_LIST + 36] = 0; // Sets the entry for IP to logical address 0 in the PCB 



ireturn;
